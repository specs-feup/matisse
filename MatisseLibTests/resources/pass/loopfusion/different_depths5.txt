function different_depths5
block #0:
  line 1
  line 3
  X$1+2+3+4+5+6+7+8+9 = arg 0
  line 1
  line 2
  line 4
  rows$2+3+4+5+6+7+8+9+10, cols$2+3+4+5+6+7+8+9+10 = call size [INT, INT] X$1+2+3+4+5+6+7+8+9
  line 5
  tmp1$2 = call zeros [DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])] rows$2+3+4+5+6+7+8+9+10, cols$2+3+4+5+6+7+8+9+10
  line 6
  tmp2$2 = call zeros [DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])] rows$2+3+4+5+6+7+8+9+10, cols$2+3+4+5+6+7+8+9+10
  line 7
  tmp3$2+3+4+5+6+7+8 = call zeros [DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])] rows$2+3+4+5+6+7+8+9+10, cols$2+3+4+5+6+7+8+9+10
  line 8
  $start$1 = 1
  $interval$1 = 1
  $start$4 = 1
  $interval$4 = 1
  $end$4 = call numel [INT] tmp3$2+3+4+5+6+7+8
  for $start$1, $interval$1, cols$2+3+4+5+6+7+8+9+10, #1, #4
block #1:
  $tmp3$1 = phi #0:tmp3$2+3+4+5+6+7+8, #3:$tmp3$2
  line 8
  tmp2$3+4+5 = phi #0:tmp2$2, #3:tmp2$8
  tmp1$3 = phi #0:tmp1$2, #3:tmp1$6+7+8
  j$2+3+4+5+6 = iter
  line 9
  $start$2 = 1
  $interval$2 = 1
  $start$3 = 1
  $interval$3 = 1
  for $start$2, $interval$2, rows$2+3+4+5+6+7+8+9+10, #2, #3
block #2:
  tmp3$9 = phi #1:$tmp3$1, #2:tmp3$10
  tmp2$6 = phi #1:tmp2$3+4+5, #2:tmp2$7
  line 9
  tmp1$4 = phi #1:tmp1$3, #2:tmp1$5
  i$3 = iter
  line 10
  tmp1$5 = simple_set tmp1$4, i$3, j$2+3+4+5+6, i$3
  line 12
  line 13
  tmp2$7 = simple_set tmp2$6, i$3, j$2+3+4+5+6, j$2+3+4+5+6
  line 16
  line 17
  $plus_arg1$1 = simple_get tmp1$5, i$3, j$2+3+4+5+6
  $plus_arg2$1 = simple_get tmp2$7, i$3, j$2+3+4+5+6
  $plus$1 = call plus [DOUBLE weak] $plus_arg1$1, $plus_arg2$1
  tmp3$10 = simple_set tmp3$9, i$3, j$2+3+4+5+6, $plus$1
block #3:
  $tmp3$2 = phi #1:$tmp3$1, #2:tmp3$10
  tmp1$6+7+8 = phi #1:tmp1$3, #2:tmp1$5
  line 14
  tmp2$8 = phi #1:tmp2$3+4+5, #2:tmp2$7
block #4:
  tmp1$9+10+11 = phi #0:tmp1$2, #3:tmp1$6+7+8
  tmp2$9+10+11 = phi #0:tmp2$2, #3:tmp2$8
  line 18
  tmp3$ret = phi #0:tmp3$2+3+4+5+6+7+8, #3:$tmp3$2
  line 19
Types:
	$end$4: INT
	$interval$1: INT (1)
	$interval$2: INT (1)
	$interval$3: INT (1)
	$interval$4: INT (1)
	$plus$1: DOUBLE weak
	$plus_arg1$1: DOUBLE weak
	$plus_arg2$1: DOUBLE weak
	$start$1: INT (1)
	$start$2: INT (1)
	$start$3: INT (1)
	$start$4: INT (1)
	$tmp3$1: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	$tmp3$2: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	X$1+2+3+4+5+6+7+8+9: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [], Dims: -1])
	cols$2+3+4+5+6+7+8+9+10: INT
	i$3: INT
	i$5: INT
	i$8: INT
	j$2+3+4+5+6: INT
	rows$2+3+4+5+6+7+8+9+10: INT
	tmp1$2: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp1$3: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp1$4: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp1$5: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp1$6+7+8: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp1$9+10+11: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$2: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$3+4+5: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$6: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$7: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$8: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp2$9+10+11: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp3$10: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp3$2+3+4+5+6+7+8: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp3$9: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])
	tmp3$ret: DynamicMatrixType(DOUBLE weak, shape=[Matrix Shape: [-1, -1], Dims: 2])