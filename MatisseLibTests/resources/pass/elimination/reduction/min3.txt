block #0:
  A$1 = arg 0
  $empty = arg 1
  $dim$1 = arg 2
  $1$1 = 1
  $A_size1$1 = call size [INT] A$1, $1$1
  $2$1 = 2
  $A_size2$1 = call size [INT] A$1, $2$1
  $3$1 = 3
  $A_size3$1 = call size [INT] A$1, $3$1
  $one$1 = 1
  $result_dim2$1 = call min [INT] $one$1, $A_size2$1
  $y$1 = call matisse_new_array_from_dims [DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])] $A_size1$1, $result_dim2$1, $A_size3$1
  $z$1 = call matisse_new_array_from_dims [DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])] $A_size1$1, $result_dim2$1, $A_size3$1
  for $one$1, $one$1, $A_size3$1, #1, #2
block #1:
  $y$2 = phi #0:$y$1, #4:$y$3
  $z$2 = phi #0:$z$1, #4:$z$3
  $iter$1 = iter
  for $one$1, $one$1, $A_size2$1, #3, #4
block #2:
  y$ret = phi #0:$y$1, #4:$y$3
  z$ret = phi #0:$z$1, #4:$z$3
block #3:
  $y$4 = phi #1:$y$2, #6:$y$5
  $z$4 = phi #1:$z$2, #6:$z$5
  $iter$2 = iter
  for $one$1, $one$1, $A_size1$1, #5, #6
block #4:
  $y$3 = phi #1:$y$2, #6:$y$5
  $z$3 = phi #1:$z$2, #6:$z$5
block #5:
  $y$6 = phi #3:$y$4, #12:$y$7
  $z$6 = phi #3:$z$4, #12:$z$7
  $iter$3 = iter
  $A_value$1 = simple_get A$1, $iter$3, $iter$2, $iter$1
  $is_start$1 = call eq [LogicalType] $iter$2, $one$1
  branch $is_start$1, #7, #8, #9
block #6:
  $y$5 = phi #3:$y$4, #12:$y$7
  $z$5 = phi #3:$z$4, #12:$z$7
block #7:

block #8:
  $y_value$1 = simple_get $y$6, $iter$3, $one$1, $iter$1
  $is_less$1 = call lt [LogicalType] $A_value$1, $y_value$1
block #9:
  $replace_value$1 = phi #7:$one$1, #8:$is_less$1
  branch $replace_value$1, #10, #11, #12
block #10:
  $z$8 = simple_set $z$6, $iter$3, $one$1, $iter$1, $iter$2
  $y$8 = simple_set $y$6, $iter$3, $one$1, $iter$1, $A_value$1
block #11:
  
block #12:
  $y$7 = phi #10:$y$8, #11:$y$6
  $z$7 = phi #10:$z$8, #11:$z$6
Types:
	$2$1: INT (2)
	$1$1: INT (1)
	y$ret: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$3$1: INT (3)
	$A_value$1: DOUBLE
	A$1: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$dim$1: INT (2)
	$iter$3: INT
	$iter$2: INT
	$empty$1: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [0, 0], Dims: 2])
	$iter$1: INT
	$result_dim2$1: INT
	$y_value$1: DOUBLE
	$replace_value$1: INT
	$y$1: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$one$1: INT (1)
	$z$1: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$2: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$5: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$z$4: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$z$5: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$6: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$3: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$z$2: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$z$3: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$4: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$A_size1$1: INT
	$z$8: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$7: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$z$6: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$is_less$1: LogicalType
	$z$7: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$y$8: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	z$ret: DynamicMatrixType(DOUBLE, shape=[Matrix Shape: [-1, -1, -1], Dims: 3])
	$A_size3$1: INT
	$A_size2$1: INT
	$is_start$1: LogicalType