block #0:
  A$1 = arg 0
  I$1 = arg 1
  $1 = arg 2
  $I_size$1 = call size [DynamicMatrixType(INT, shape=[Matrix Shape: [1, 2], Dims: 1])] I$1
  $I_dim1$1, $I_dim2$1 = call size [INT (1), INT] I$1
  $one$1 = 1
  $eq_result$1 = call eq [LogicalType] $I_dim1$1, $one$1
  $one$2 = 1
  $eq_result$2 = call eq [LogicalType] $I_dim2$1, $one$2
  $or_result$1 = call or [LogicalType] $eq_result$1, $eq_result$2
  branch $or_result$1, #3, #4, #5
block #1:

block #2:
  $2 = phi #5:A$1, #1:I$1
block #3:
  $A_size1$1, $A_size2$1 = call size [INT, INT] A$1
  $one$3 = 1
  $eq_result$3 = call eq [LogicalType] $A_size1$1, $one$3
  branch $eq_result$3, #6, #7, #8
block #4:

block #5:
  y$1 = phi #8:$merged$2, #4:$I_size$1
  for $1, $1, $1, #1, #2
block #6:
  $numel_result$1 = call numel [INT] I$1
  $one$4 = 1
  $horzcat_result$1 = call horzcat [StaticMatrixType - INT ([Matrix Shape: [1, 2], Dims: 1])] $one$4, $numel_result$1
block #7:
  $one$5 = 1
  $eq_result$4 = call eq [LogicalType] $A_size2$1, $one$5
  branch $eq_result$4, #9, #10, #11
block #8:
  $merged$2 = phi #6:$horzcat_result$1, #11:$merged$1
block #9:
  $numel_result$2 = call numel [INT] I$1
  $one$6 = 1
  $horzcat_result$2 = call horzcat [StaticMatrixType - INT ([Matrix Shape: [1, 2], Dims: 1])] $numel_result$2, $one$6
block #10:

block #11:
  $merged$1 = phi #9:$horzcat_result$2, #10:$I_size$1