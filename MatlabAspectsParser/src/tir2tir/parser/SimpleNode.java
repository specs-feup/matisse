package tir2tir.parser;
/* Generated By:JJTree: Do not edit this line. SimpleNode.java Version 4.1 */
/* JavaCCOptions:MULTI=false,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class SimpleNode implements Node {

  protected Node parent;
  protected Node[] children;
  private int id;
  protected Object value;
  protected AspectsParser parser;
  
  //Added:
  public boolean flag = false;
	
  public SimpleNode(int i) {
    setId(i);
  }

  public SimpleNode(AspectsParser p, int i) {
    this(i);
    parser = p;
  }

  @Override
public void jjtOpen() {
  }

  @Override
public void jjtClose() {
  }

  @Override
public void jjtSetParent(Node n) { parent = n; }
  @Override
public Node jjtGetParent() { return parent; }

  @Override
public void jjtAddChild(Node n, int i) {
    if (children == null) {
      children = new Node[i + 1];
    } else if (i >= children.length) {
      Node c[] = new Node[i + 1];
      System.arraycopy(children, 0, c, 0, children.length);
      children = c;
    }
    children[i] = n;
  }

  @Override
public Node jjtGetChild(int i) {
    return children[i];
  }

  @Override
public int jjtGetNumChildren() {
    return (children == null) ? 0 : children.length;
  }

  public void jjtSetValue(Object value) { this.value = value; }
  public Object jjtGetValue() { return value; }

  /* You can override these two methods in subclasses of SimpleNode to
     customize the way the node appears when the tree is dumped.  If
     your output uses more than one line you should override
     toString(String), otherwise overriding toString() is probably all
     you need to do. */

	@Override
	public String toString() { 
		String ret = AspectsParserTreeConstants.jjtNodeName[getId()];
		//Added://
		if(value != null){
			ret+=": "+value;
		}
		if(flag){
			ret+=" - true";
		}
		/////////
		return ret; 
	}
  public String toString(String prefix) { return prefix + toString(); }

  /* Override this method if you want to customize how the node dumps
     out its children. */

  public void dump(String prefix) {
    System.out.println(toString(prefix));
    if (children != null) {
      for (int i = 0; i < children.length; ++i) {
        SimpleNode n = (SimpleNode)children[i];
        if (n != null) {
          n.dump(prefix + " ");
        }
      }
    }
  }

public void setId(int id) {
	this.id = id;
}

public int getId() {
	return id;
}
}

/* JavaCC - OriginalChecksum=c214b747e6cbd7ffbd0a94bd010fc9ad (do not edit this line) */
